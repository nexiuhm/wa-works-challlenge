{"version":3,"sources":["components/SortableList.tsx","components/DropdownFilter.tsx","Api.tsx","components/Popup.tsx","components/MovieDetails.tsx","components/blurContainer.tsx","App.tsx","hooks/CompositeFilter.tsx","reportWebVitals.ts","index.tsx"],"names":["SortableTable","data","columnLabels","onItemSelected","useState","sortColumn","ascending","sortState","setSortState","_data","setData","useEffect","array","key","console","log","sortedArray","sort","a","b","reverse","sortArrayByKey","renderTabelHead","label","onClick","column","className","css","map","item","renderTableRow","Dropdown","button","children","dropdownContentVisible","setDropDownContentVisible","API_KEY","searchQuery","fetch","res","json","Popup","visible","onClose","baseStyling","transform","top","left","position","topLeftAbsolute","closeButton","renderModalWindow","width","height","MovieDetails","movie","Poster","background","display","borderRadius","margin","padding","src","Title","Year","Runtime","fontSize","Plot","BlurContainer","blur","blurAmount","filter","spaceThemedMovies","App","React","movieData","setMovieData","filteredMovies","setFilteredMovies","baseData","filters","setFilters","filteredData","setFilteredData","length","filterResult","o","every","f","condition","addFilter","filterName","removeFilter","match","applyFilters","dataSet","useCompositeFilter","selectedMovie","setSelectedMovie","forEach","title","getMovieBySearch","then","Metascore","Rated","imdbRating","type","onChange","e","target","checked","m","parseInt","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c71ca1d.chunk.js","sourcesContent":["\r\nimport styled from \"@emotion/styled\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { css, cx } from '@emotion/css'\r\n\r\n\r\ntype Props<T,K> = {\r\n    data: T[];\r\n    columnLabels: K[];\r\n    className?: string;\r\n    onItemSelected?: Function | null;\r\n    //tableHeadData: {label:String, sortKey:String}[];\r\n    \r\n}\r\n\r\ntype sortState<K> = {\r\n    sortColumn: K,\r\n    ascending: boolean\r\n\r\n}\r\n\r\n/* Todo : move to some kind of util/helper functions file */\r\nfunction sortArrayByKey<T,K extends keyof T>(array:T[],key:K, ascending:boolean):any[] {\r\n\r\n\r\n  console.log(array, key,ascending )\r\n  const sortedArray = [...array].sort((a,b)=> {\r\n    return (a[key] < b[key]) ? -1 : (a[key] > b[key]) ? 1 : 0\r\n  });\r\n\r\n  console.log(sortedArray)\r\n\r\n  return ascending ? sortedArray : sortedArray.reverse(); // probably not optimal\r\n\r\n}\r\n\r\n\r\n\r\nexport default function SortableTable<T, K extends keyof T>({data,columnLabels,onItemSelected = null}:Props<T,K>) {\r\n\r\n\r\n \r\n    const [sortState, setSortState] = useState<sortState<K>>({sortColumn: columnLabels[0],ascending: true })\r\n    const [_data, setData] = useState(data)\r\n\r\n\r\n  \r\n    /* When internal sort state or data prop is updated, sort movies */\r\n\r\n    useEffect(()=> {\r\n     \r\n      setData(sortArrayByKey(data, sortState.sortColumn, sortState.ascending))\r\n      \r\n    console.log(data)\r\n    },[sortState,data])\r\n\r\n    \r\n    /* Reverse sort direction if same colulmn is selected twice, otherwise sort the new column ascending */\r\n    const updateSortState = (column:K) => column === sortState.sortColumn? setSortState({sortColumn:column,ascending: !sortState.ascending}) : setSortState({sortColumn:column,ascending: true})\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n    const renderTableRow = (item:T) => \r\n\r\n      <tr onClick={()=>(onItemSelected && onItemSelected(item)) }>\r\n        { columnLabels.map( (key)=> <td> {item[key]} </td> ) }\r\n      </tr>\r\n\r\n    const renderTabelHead = (label:K) => \r\n\r\n      <td onClick={()=>updateSortState(label) }>\r\n        { label}\r\n      </td> \r\n    \r\n      \r\n\r\n    \r\n    return (  \r\n       \r\n\r\n      \r\n        <table className={css`\r\n        padding: 10px;\r\n        background: linear-gradient(90deg, rgba(121,62,224,0.7) 0%, rgba(62,121,227,0.3) 52%, rgba(38,96,201,0.7) 83%);\r\n        font-size: 24px;\r\n        border-radius: 4px;\r\n        width: 100%;\r\n        user-select: none;\r\n        \r\n        color: white;\r\n        border: 0;\r\n     \r\n        \r\n        \r\n        font-size: 12px;\r\n        border-collapse: collapse; \r\n        box-sizing: border-box;\r\n        \r\n        tr:hover {\r\n          background: rgba(121,62,224,0.4598214285714286);\r\n          \r\n          box-shadow: 0 0 0 1px #999999;\r\n          transform: scale(1.01);\r\n         \r\n\r\n         \r\n          \r\n        }\r\n\r\n        tr {\r\n          height: 20px;\r\n          min-height: 20px;\r\n          max-height: 20px;\r\n          box-sizing: border-box;\r\n          overflow:hidden;\r\n         \r\n         \r\n          \r\n         \r\n        }\r\n\r\n        td {\r\n          padding: 20px;\r\n          width: 100px;\r\n          max-width: 100px;\r\n          min-width: 100px;\r\n          box-sizing: border-box;\r\n          \r\n        }\r\n      `}>\r\n\r\n          <thead>\r\n            <tr>\r\n            {columnLabels.map((label)=>renderTabelHead(label))}\r\n            </tr>\r\n          </thead>\r\n\r\n        <tbody>\r\n        {_data.map((item)=>renderTableRow(item))}\r\n        </tbody>\r\n        \r\n      </table>\r\n\r\n    )\r\n    \r\n}","import React, {useState, useEffect, JSXElementConstructor} from \"react\";\r\nimport { css, cx } from '@emotion/css'\r\nimport { forEachChild, JsxElement } from \"typescript\";\r\n\r\ntype Props = {\r\n    children: React.ReactNode\r\n    button?: React.ReactNode\r\n    \r\n}\r\n\r\n\r\nexport default function Dropdown({button,children}:Props) {\r\n\r\n\r\n    const [dropdownContentVisible, setDropDownContentVisible] = useState(false)\r\n\r\n\r\n    const onClickToggleDropdown = () => setDropDownContentVisible(!dropdownContentVisible)\r\n    const displayChildren = {\r\n        \r\n    }\r\n\r\n\r\n\r\n    return(\r\n\r\n        <ul className={css`list-style-type: none;`} >\r\n\r\n            <li>\r\n                <div className= {css`display: inline;} `} onClick = {onClickToggleDropdown}>{button ? button : \"Toggle drowndown\"}</div>\r\n            </li>\r\n\r\n            \r\n\r\n                 <li className={css`display: ${dropdownContentVisible ? `absolute` : `none`}`}> {children} </li> \r\n            \r\n          \r\n            \r\n            \r\n            \r\n            \r\n\r\n        </ul>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// {label, key}[]","/*\r\n\r\n\r\ntype searchRequest = {\r\n    s: string;\r\n    type?: \"movie\" | \"series\" | \"episode\";\r\n    y?: number;\r\n\r\n}\r\n\r\n*/\r\n\r\nconst API_KEY = \"48c3ab98\";\r\n\r\n\r\n\r\nexport default async function getMovieBySearch(searchQuery:String) {\r\n\r\n    const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&t=${searchQuery}`)\r\n    const json = await res.json();\r\n\r\n    return json;\r\n\r\n}\r\n\r\n\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\n\r\nimport { css, jsx } from '@emotion/react'\r\nimport React, { Children, useEffect, useState } from 'react';\r\n\r\n\r\n\r\ntype Props = {\r\n    visible: boolean\r\n    children: React.ReactNode\r\n    onClose: Function\r\n}\r\nexport default function Popup({visible,onClose, children }:Props) {\r\n\r\n    \r\n\r\n    const baseStyling = css({transform: \"translate(-50%, -50%)\",top:\"50%\",left: \"50%\" ,position:\"fixed\" });\r\n    const topLeftAbsolute = css`\r\n    position:absolute;\r\n    font-size:50px;\r\n    right:30px;\r\n    top:0;\r\n    padding: 5px;\r\n    color:white;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color:#aa70e0;\r\n    }\r\n    `\r\n    \r\n    console.log(\"rendering again\");\r\n    \r\n    const closeButton = <div css={topLeftAbsolute} onClick={()=>onClose()}>X</div> \r\n\r\n    const renderModalWindow =  \r\n\r\n    <div css={{position:\"absolute\",width:\"100%\",height:\"100%\"}}>\r\n        <div css={baseStyling}> {closeButton}{children }</div>\r\n    </div>\r\n \r\n\r\n    return(\r\n\r\n        \r\n        visible ? renderModalWindow : null\r\n       \r\n    )\r\n\r\n\r\n\r\n}","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\n\r\nimport { css, jsx } from '@emotion/react'\r\nimport React, { Children } from 'react';\r\nimport {MovieData} from \"../App\"\r\n\r\n  \r\ntype Props = {\r\n    movie:MovieData\r\n \r\n}\r\nexport default function MovieDetails({movie}:Props) {\r\n\r\n\r\n    console.log(movie.Poster)\r\n\r\n    return(\r\n\r\n        \r\n        <div css={{\r\n            background: \"linear-gradient(90deg, rgba(31,20,50,1) 0%, rgba(23,33,48,1) 52%, rgba(0,0,0,1) 83%);\", display: \"flex\",borderRadius: \"10px\", height:\"100%\", width:\"100%\", margin:\"0\"}}>\r\n\r\n\r\n            <div>\r\n                <img css={{padding: \"10px\"}}src={movie.Poster}></img>\r\n                \r\n                 \r\n            </div>\r\n            \r\n            <div css={{padding: \"50px\"}}>\r\n            <h1 css={{margin:0}}>{movie.Title}</h1> \r\n                \r\n                  \r\n                    <div>Release: {movie.Year}</div>\r\n                    <div>Runtime: {movie.Runtime}</div>\r\n                <h3>Plot</h3>\r\n                <p css={{fontSize:\"18px\"}}>{movie.Plot}</p>\r\n            </div>\r\n            \r\n            \r\n            \r\n        </div>\r\n        \r\n\r\n       \r\n    )\r\n\r\n\r\n\r\n}","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\n\r\nimport { css, jsx } from '@emotion/react'\r\nimport React, { Children, useEffect, useState } from 'react';\r\n\r\n\r\n\r\ntype Props = {\r\n    blur: boolean\r\n    children: React.ReactNode\r\n}\r\nexport default function BlurContainer({blur,children}:Props) {\r\n\r\n    \r\n    const blurAmount = blur ? \"50px\" : \"0px\"\r\n    console.log(blur);\r\n\r\n    return(\r\n\r\n        \r\n        <div css={{filter: `blur(${blurAmount})`}}>{children}</div>\r\n       \r\n    )\r\n\r\n\r\n\r\n}","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React from 'react';\nimport SortableTable from \"./components/SortableList\";\nimport useCompositeFilter from \"./hooks/CompositeFilter\";\nimport Dropdown from \"./components/DropdownFilter\"\nimport './App.css';\nimport getMovieBySearch from './Api';\nimport Popup from \"./components/Popup\"\nimport MovieDetails from \"./components/MovieDetails\"\nimport BlurContainer from \"./components/blurContainer\"\nimport { convertToObject } from 'typescript';\n\nfunction pick<T, K extends keyof T>(obj: T, ...keys: K[]): Partial<Pick<T, K>> {\n  const ret: any = {};\n  keys.forEach(key => {\n    ret[key] = obj[key];\n  })\n  return ret;\n}\n\nconst spaceThemedMovies = [\"interstellar\", \"alien\", \"2001: A Space Odyssey\", \"Gravity\", \"Star Wars\", \"Europa Report\", \"Moon\", \"Sunshine\", \"Apollo 13\", \"Contact\", \"The Martian\", \"Event Horizon\", \"Elysium\", \"Avatar\", \"Pitch Black\"];\n\n\n\nexport type MovieData = {\n  Title: string,\n  Year: string,\n  Metascore: string,\n  imdbRating: number,\n  Runtime: string,\n  Poster: string,\n  Plot: string,\n}\n\n\n\nexport default function App() {\n\n  /* Init */\n  const [movieData, setMovieData] = React.useState<MovieData[]>([]);\n  const [filteredMovies, setFilteredMovies] = React.useState<MovieData[] | null>([]);\n  const {filteredData, addFilter, removeFilter} = useCompositeFilter<MovieData>(movieData)\n  const [selectedMovie, setSelectedMovie] = React.useState<MovieData>()\n\n\n\n\n  /* To start with, send some API request with a pre-set list of movie data. Chosen theme is \"space-movies\" */\n  React.useEffect(() => {\n\n    spaceThemedMovies.forEach((title: string) => {\n      getMovieBySearch(title).then(({ Title, Year, Metascore, Rated, Runtime, Poster, Plot, imdbRating }) => {\n        setMovieData((movieData) => [...movieData, { Title: Title, Year: Year, Metascore: Metascore, imdbRating: imdbRating, Runtime: Runtime, Poster: Poster, Plot: Plot }])\n      })\n\n    })\n\n  }, [])\n\n  React.useEffect(() => {\n    setFilteredMovies(filteredData);\n  }, [filteredData])\n\n\n  /* Based on userinput we manupilate the data */\n  React.useEffect(() => {\n    setFilteredMovies(movieData)\n  }, [movieData])\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <BlurContainer blur={selectedMovie ? true : false}>\n\n\n        <h1>Space themed movies</h1>\n\n\n        { /* ---- Dropdown to filter moviedata, children is rendered based on dropdown state  --------------------------------------------------- */}.\n        <Dropdown>\n          <div>\n            <label><input type=\"checkbox\" onChange={(e)=>e.target.checked ? addFilter(\"<year2k\", (m: MovieData) => parseInt(m.Year) < 2000) : removeFilter(\"<year2k\")} /> Before year 2000</label>\n            <label><input type=\"checkbox\" onChange={(e)=>e.target.checked ? addFilter(\">7.7imdb\", (m: MovieData) => m.imdbRating > 7.7) : removeFilter(\">7.7imdb\")} /> High rated imdb</label>\n\n\n          </div>\n        </Dropdown>\n\n        { /* ---- A table that displays the filtered movie data. The table can also sort the data internally asc/desc by clicking its column headers. --- */}\n\n        {filteredMovies &&\n          <SortableTable\n            onItemSelected={(movie: MovieData) => { setSelectedMovie(movie) }}\n            columnLabels={[\"Title\", \"Year\", \"Metascore\", \"imdbRating\", \"Runtime\"]}\n            data={filteredMovies}\n          />}\n\n      </BlurContainer>\n\n\n\n      { /* ----- Modal that displays more details data when a user has selected a table element */}\n\n      {selectedMovie &&\n        <Popup onClose={() => { setSelectedMovie(undefined); }} visible={selectedMovie ? true : false}>\n          <MovieDetails movie={selectedMovie}></MovieDetails>\n        </Popup>}\n\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\r\n\r\ntype Filter = {\r\n  filterName: string,\r\n  condition: Function\r\n\r\n}\r\n\r\n\r\nexport default function useCompositeFilter<T>(baseData: T[]) {\r\n\r\n  const [filters, setFilters] = useState<Filter[]>([])\r\n  const [filteredData, setFilteredData] = useState<T[] | null>(null)\r\n\r\n  function addFilter(filterName: string, condition: Function) {\r\n\r\n    setFilters([...filters, { filterName: filterName, condition: condition }])\r\n\r\n    console.log(\"Added Filter\", [...filters, { filterName: filterName, condition: condition }])\r\n\r\n  }\r\n\r\n  function removeFilter(filterName: string) {\r\n\r\n    const match = filters.filter((o) => o.filterName != filterName)\r\n\r\n    console.log(\"Removed filter testta her\", match)\r\n    setFilters(match)\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    console.log(\"filters aktiv:\", filters)\r\n\r\n\r\n    // Settil til orginal data om ingen aktive filtere\r\n    if(filters.length === 0) { setFilteredData(baseData); return;}\r\n\r\n    const filterResult = baseData.filter((o) => {\r\n\r\n      return (\r\n        filters.every((f) => {\r\n          console.log(f)\r\n          return f.condition(o)\r\n        })\r\n      )\r\n\r\n\r\n    })\r\n\r\n    setFilteredData(filterResult);\r\n    console.log(\"debug: resultat\",filterResult)\r\n\r\n\r\n\r\n\r\n  }, [filters])\r\n\r\n\r\n  function applyFilters<T>(dataSet: T[]) {\r\n\r\n\r\n  }\r\n\r\n\r\n  return { filteredData: filteredData, addFilter: addFilter, removeFilter: removeFilter, applyFilters }\r\n\r\n\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}